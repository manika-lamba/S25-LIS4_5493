---
title: "Activity 2 Presentation"
subtitle: ""
author: 
  - Dr. Manika Lamba
format:
  revealjs: 
    slide-number: true
    chalkboard: 
      theme: whiteboard
      buttons: true
    preview-links: false
    controls: true
    progress: true
    show-notes: separate-page
    logo: images/ou.png
    css: styles.css
editor: 
  markdown: 
    wrap: 72
---

# Introduction

::: notes
In this activity, we will learn to use R for data
:::

## **Basic Quality Control** {.smaller}

#### **Use good null values –** Missing values are a fact of life

-   Usually, best solution is to **leave blank**

-   **`NA`** or **`NULL`** are also good options

-   **NEVER use `0`**. Avoid numbers like **`-999`**

-   Don’t make up your own code for missing values

## [**`read.csv()`**](http://stat.ethz.ch/R-manual/R-devel/library/utils/html/read.table.html) **utilities** {.smaller}

-   **`na.string`:** character vector of values to be coded missing and
    replaced with `NA` to argument eg
-   **`strip.white`:** Logical. if `TRUE` strips leading and trailing
    white space from unquoted character fields
-   **`blank.lines.skip`:** Logical: if `TRUE` blank lines in the input
    are ignored.
-   **`fileEncoding`:** if you're getting funny characters, you probably
    need to specify the correct encoding.

``` r
read.csv(file, na.strings = c("NA", "-999"), strip.white = TRUE, 
         blank.lines.skip = TRUE, fileEncoding = "mac")
```

## [**`readr::read_csv()`**](https://cran.r-project.org/web/packages/readr/readr.pdf) **utilities** {.smaller}

-   **`na`:** character vector of values to be coded missing and
    replaced with `NA` to argument eg
-   **`trim_ws`:** Logical. if `TRUE` strips leading and trailing white
    space from unquoted character fields
-   **`col_types`:** Allows for column data type specification. ([see
    more](https://cran.r-project.org/web/packages/readxl/vignettes/cell-and-column-types.html))
-   **`locale`:** controls things like the default time zone, encoding,
    decimal mark, big mark, and day/month names
-   **`skip`:** Number of lines to skip before reading data.
-   **`n_max`:** Maximum number of records to read.

``` r
read_csv(file, col_names = TRUE, col_types = NULL, locale = default_locale(), 
         na = c("", "NA", "-999"), trim_ws = TRUE, skip = 0, n_max = Inf)
```

## Inspect

Have a look at your data with `View(df)`

``` r
View(mtcars)
```

![](images/clipboard-2872990305.png){fig-align="center"}

## Print  {.smaller}

Check your software interprets your data correctly

EG. see top few rows with `head(df)`

```{r, include=TRUE, echo=TRUE}
head(mtcars)
```

## Structure

See structure of any object with `str()`.

```{r, include=TRUE, echo=TRUE}
str(mtcars)
```

## Summarise

-   Check the **range of values** (and value types) in each column
    matches expectation.
-   Check **units of measurement are what you expect**

```{r, include=TRUE, echo=TRUE}
summary(mtcars)
```

## pkg [`skimr`](https://github.com/ropenscilabs/skimr)

`skimr` provides a frictionless approach to displaying summary
statistics the user can skim quickly to understand their data

```r
install.packages("skimr")
```
## pkg [`skimr`](https://github.com/ropenscilabs/skimr) {.smaller}

```{r, include=TRUE, echo=TRUE}
library(skimr)
skim(mtcars)
```

## Validate {.smaller}

pkg [`assertr`](https://github.com/ropensci/assertr)

- The `assertr` package supplies a suite of functions designed to verify
assumptions about data and can be used so detect data errors during
analysis.

```r
install.packages("assertr")
```

e.g confirm that `mtcars`

-   has the columns "mpg", "vs", and "am"
-   contains more than 10 observations
-   column for 'miles per gallon' (mpg) is a positive number before
    further analysis:

```{r, include=TRUE, echo=TRUE}
library(dplyr)
library(assertr)
mtcars %>%
    verify(has_all_names("mpg", "vs", "am", "wt")) %>%
    verify(nrow(.) > 10) %>%
    verify(mpg > 0)
```

## Backup: Github

-   most solid version control

-   keep everything in one project folder

-   Can be problematic with really large files
